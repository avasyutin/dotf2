export ZSH=$HOME/.oh-my-zsh

ZSH_THEME="gallois"

# https://github.com/agkozak/zsh-z
plugins=(z bundler rails docker docker-compose git git-prompt rbenv)
source $ZSH/oh-my-zsh.sh

# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# Useful functions
#
function is_mac() {
  uname="$(uname -a)"
  [[ "$uname" =~ Darwin ]] && return

  false
}

function is_linux() {
  uname="$(uname -a)"
  [[ "$uname" =~ Linux ]] && return

  false
}

function is_wsl() {
  uname="$(uname -r)"
  [[ "$uname" =~ microsoft ]] && return

  false
}

# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# Common environment configuration
#

function rbenv_prompt_info() {
  if [ -e "./.ruby-version" ]; then
    echo "[%{$fg[red]%}$(cat .ruby-version)%{$fg[default]%}]"
  fi
}

ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg[lightgray]%}[%{$fg[green]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$fg[lightgray]%}]"
ZSH_THEME_GIT_PROMPT_BRANCH="%{$fg[green]%}"

# Show prompt like […/speed2/speed_to]$
# https://unix.stackexchange.com/questions/273529/shorten-path-in-zsh-prompt
export PS1="%{$fg[cyan]%}[%(3~|…/%2~|%4~)]%(?.%{$fg[green]%}.%{$fg[red]%})%B$%b "
export RPROMPT='$(rbenv_prompt_info) $(git_super_status)%{$reset_color%}'

export PATH="$HOME/bin:$PATH"
export PATH="./bin:$PATH"
export PATH="./node_modules/.bin:$PATH"

export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

if is_mac; then
  export CLICOLOR=1
  # If you'd like to mimic the colors of a typical Linux terminal
  # https://www.cyberciti.biz/faq/apple-mac-osx-terminal-color-ls-output-option/
  export LSCOLORS=exgxBxDxcxEgEdxbxgxcxd
fi

# Tmux
alias tmux='tmux -2'
alias ta='tmux attach -t'
alias tnew='tmux new -s'
alias tls='tmux ls'
alias tkill='tmux kill-session -t'

# Fix tmuxinator/tmuxp window titles.
export DISABLE_AUTO_TITLE='true'

# Use vimx if exists (because clipboard support)
if [ -x "$(command -v vimx)" ]; then
  alias vim='vimx'
  export EDITOR='vimx'
else
  export EDITOR='vim'
fi

# Enable clipboard integration for WSL2
if is_wsl; then
  export DISPLAY=`grep -oP "(?<=nameserver ).+" /etc/resolv.conf`:0.0
fi

# Green cursor
echo -ne '\e]12;green\a'

# SublimeText 'subl .' command
if is_mac; then
  export PATH="/Applications/Sublime Text.app/Contents/SharedSupport/bin:$PATH"
fi

# Make ZSH completion output the same color as 'ls' output color
# https://superuser.com/questions/290500/zsh-completion-colors-and-os-x
# https://geoff.greer.fm/lscolors/
export LS_COLORS="di=34:ln=36:so=1;31:pi=1;33:ex=32:bd=1;34;46:cd=1;34;43:su=0;41:sg=0;46:tw=0;42:ow=0;43"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}


# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# FZF for searching in the shell history
#
if is_mac; then
  [ -s "$(brew --prefix fzf)/shell/key-bindings.zsh" ] && \. "$(brew --prefix fzf)/shell/key-bindings.zsh"
else
  [ -s "/usr/share/fzf/shell/key-bindings.zsh" ] && \. /usr/share/fzf/shell/key-bindings.zsh
fi

export FZF_DEFAULT_COMMAND='rg --files'

# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# Ruby and Rails environment
#
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

export BUNDLE_JOBS=4
export DISABLE_SPRING=1
export SKIP_SIMPLECOV=1

# Fix node on Apple Silicon processors
# https://stackoverflow.com/questions/69692842/error-message-error0308010cdigital-envelope-routinesunsupported
# export NODE_OPTIONS=--openssl-legacy-provider

# Node Version Manager
export NVM_DIR="$HOME/.nvm"

if is_mac; then
  [ -s "$(brew --prefix nvm)/nvm.sh" ] && \. "$(brew --prefix nvm)/nvm.sh"
  [ -s "$(brew --prefix nvm)/etc/bash_completion.d/nvm" ] && \. "$(brew --prefix nvm)/etc/bash_completion.d/nvm"
else
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
  [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
fi

if is_mac; then
  export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/lib:/opt/homebrew/lib/
  export CPATH=$CPATH:/usr/local/include:/opt/homebrew/include/
fi

# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# Go environment
#

if is_linux; then
  export PATH="$HOME/opt/go/bin:$PATH"
fi

export GOPATH="$HOME/work/go"
export PATH="$GOPATH/bin:$PATH"

# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# Devops tools
#
export ANSIBLE_NOCOWS=1

# Terraform autocompletion configuration
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C terraform terraform

# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# Postgres configuration
#
if is_mac; then
  # For compilers to find postgresql@15 you may need to set:
  #   export LDFLAGS="-L/opt/homebrew/opt/postgresql@15/lib"
  #   export CPPFLAGS="-I/opt/homebrew/opt/postgresql@15/include"
  #
  # To restart postgresql@15 after an upgrade:
  #   brew services restart postgresql@15
  # Or, if you don't want/need a background service you can just run:
  #   /opt/homebrew/opt/postgresql@15/bin/postgres -D /opt/homebrew/var/postgresql@15
  export PATH="$(brew --prefix postgresql@15)/bin:$PATH"
fi

if is_wsl; then
  # Set default postgres host for WSL2
  export PGHOST=127.0.0.1
fi
